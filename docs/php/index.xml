<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Boring Machine Learning</title><link>http://boringml.com/docs/php/</link><description>Recent content on Boring Machine Learning</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://boringml.com/docs/php/index.xml" rel="self" type="application/rss+xml"/><item><title>is_set</title><link>http://boringml.com/docs/php/arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://boringml.com/docs/php/arrays/</guid><description>Is set versus array_key_exists # I dug into the performance of isset versus array_key_exists in PHP.
Both look at an array and determine if it has a specific key, but their behavior is different.
isset will return false if the value of that key is null. array_key_exists will only look at the key itself.
Using an id as an example:
$a = array(&amp;#39;1&amp;#39; =&amp;gt; &amp;#39;`12345678`&amp;#39;, &amp;#39;key2&amp;#39; =&amp;gt; null); isset($a[&amp;#39;key1&amp;#39;]); //true isset($a[&amp;#39;key2&amp;#39;]); //false array_key_exists(&amp;#39;key1&amp;#39;, $a); // true array_key_exists(&amp;#39;key2&amp;#39;, $a); //true So if you want your function to be null-safe, isset is always the best best.</description></item></channel></rss>